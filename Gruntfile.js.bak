// 包装函数
module.exports = function(grunt) {

	// 任务配置
	grunt.initConfig({
		pkg: grunt.file.readJSON('package.json'),
		directory: {
			basedir: '<%= pkg.directory %>/js',
			jsdir: '<%= pkg.directory %>/js/<%= pkg.project %>',
			cssdir: '<%= pkg.directory %>/css',
			imgdir: '<%= pkg.directory %>/img',
			targetdir: '<%= pkg.directory %>'
		},
		jshint: {
			files: ['Gruntfiles.js', 'src/*.js'],
			options: {
				"strict": true,
				"noarg": true,
				"noempty": true,
				"eqeqeq": true,
				"undef": true,
				"curly": true,
				"forin": true,
				"devel": true,
				"jquery": true,
				"browser": true,
				"wsh": true,
				"evil": true
			}
		},
		csslint: {
			build: {
				src: "<%= directory.cssdir %>/*.css",
				rules: {
					'box-model': false,
					'adjoining-classes': false
				}
			}
		},
		concat: {
			base: {
				src: ['<%= directory.basedir %>/core.js', '<%= directory.basedir %>/logic_factory.js', '<%= directory.basedir %>/data.js', '<%= directory.basedir %>/utils.js'],
				dest: '<%= directory.targetdir %>/build/QClient.base.js'
			},
			build: {
				src: ['<%= directory.peject %>/data.js', '<%= directory.peject %>/logic.js', '<%= directory.peject %>/ui.js', '<%= directory.peject %>/utils.js'],
				dest: '<%= directory.targetdir %>/build/QClient.<%= pkg.project %>.js'
			},
			css: {
				src: '<%= directory.cssdir %>/*.css',
				dest: '<%= directory.targetdir %>/build/Qclient.<%= pkg.project %>.css'
			}
		},
		uglify: {
			base: {
				src: '<%= directory.targetdir %>/build/QClient.base.js',
				dest: '<%= directory.targetdir %>/build/QClient.base.min.js'
			},
			build: {
				src: '<%= directory.targetdir %>/build/QClient.<%= pkg.project %>.js',
				dest: '<%= directory.targetdir %>/build/QClient.<%= pkg.project %>.min.js'
			}
		},
		cssmin: {
			build: {
				src: '<%= directory.targetdir %>/build/Qclient.<%= pkg.project %>.css',
				dest: '<%= directory.targetdir %>/build/Qclient.<%= pkg.project %>.min.css'
			}
		},
		qunit: {
			files: ['test/*.html']
		},
		watch: {
			files: ['<%= jshint.files%>'],
			tasks: ['jshint', 'csslint', 'concat:base', 'concat:build', 'concat:css']
		},
		connect: {
			options: {
				port: 8000,
				hostname: 'localhost'
			},
			server: {
				options: {
					open: true,
					base: ['test']
				}
			}
		}
	});

	//加载自定义方法
//	grunt.loadTasks('tasks');
	// 任务加载
	grunt.loadNpmTasks('grunt-contrib-jshint');
	grunt.loadNpmTasks('grunt-contrib-concat');
	grunt.loadNpmTasks('grunt-contrib-uglify');
	grunt.loadNpmTasks('grunt-contrib-qunit');
	grunt.loadNpmTasks('grunt-contrib-watch');
	grunt.loadNpmTasks('grunt-contrib-connect');
	grunt.loadNpmTasks('grunt-css');

	// 测试base方法
	grunt.registerTask('test', [
		'connect:server',
		'jshint',
		'csslint',
		'qunit'
	]);
	//生成开发文件
	grunt.registerTask('builder', [
		'jshint',
		'csslint',
		'concat:base',
		'concat:build',
		'uglify:base',
		'uglify:build',
		'concat:css',
		'cssmin'
	]);
};
